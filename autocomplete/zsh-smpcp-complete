#compdef smpcp

#
# .▄▄ · • ▌ ▄ ·.  ▄▄▄· ▄▄·  ▄▄▄· super
# ▐█ ▀. ·██ ▐███▪▐█ ▄█▐█ ▌▪▐█ ▄█ music
# ▄▀▀▀█▄▐█ ▌▐▌▐█· ██▀·██ ▄▄ ██▀· player
# ▐█▄▪▐███ ██▌▐█▌▐█▪·•▐███▌▐█▪·• client
#  ▀▀▀▀ ▀▀  █▪▀▀▀.▀   ·▀▀▀ .▀    plus+
#
# This file is part of smpcp.
# Copyright (C) 2021, Stéphane MEYER.
#
# Smpcp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>
#
# SMPCP-AUTOCOMPLETE
# C : 2021/05/31
# M : 2021/06/16
# D : Zsh completion for smpcp.

_smpcp_commands() {
  local commands
  commands=(${(f)"$(smpcp help | awk '/^ *smpcp [a-z]+ /{print $2}')"})
  _describe -t commands "smpcp commands" commands
}

_smpcp_args() {
  local args=($*)
  _arguments '*:args:($args)'
}

_smpcp_directories() {
  local directories
  directories=(${(f)"$(smpcp lsdir "$cur" 2> /dev/null)"})
  compadd -S '' -a directories

}

_smpcp_artists() {
  local artists
  artists=(${(f)"$(smpcp lsartists 2> /dev/null)"})
  _arguments '*:artists:($artists)'
}

_smpcp_albums() {
  local artist albums
  artist="$*"
  albums=(${(f)"$(smpcp lsalbums "$artist" 2> /dev/null)"})
  _arguments '*:albums:($albums)'
}

_smpcp_playlists() {
  local playlists
  playlists=(${(f)"$(smpcp pls 2> /dev/null)"})
  _arguments '*:playlists:($playlists)'
}

_smpcp_outputs() {
  local outputs
  outputs=(${(f)"$(smpcp lsoutputs -l 2> /dev/null)"})
  _arguments '*:outputs:($outputs)'
}

_smpcp() {
  local prev="$words[$((CURRENT-1))]"

  if [[ $prev == "++" ]] || (( CURRENT == 2 )); then
    _smpcp_commands
    return
  fi

  local cur="$words[$CURRENT]"

  case $prev in
    add | lsdir | update )
      cur="${cur//\\}"
      _smpcp_directories
    ;;
    addalbum | albums | insertalbum | lsalbums | playalbum )
      _smpcp_artists
    ;;
    consume | random | repeat | single )
      _smpcp_args "on" "off"
    ;;
    cload | load | pls | remove | save )
      _smpcp_playlists
    ;;
    mode )
      _smpcp_args "album" "normal" "song"
    ;;
    output )
      cur="${cur//\\}"
      _smpcp_outputs
    ;;
    replaygain )
      _smpcp_args "album" "auto" "track"
  esac

  case $words[$((CURRENT-2))] in
    addalbum | insertalbum | playalbum )
      local cur="$words[$((CURRENT-1))]"
      cur="${cur//\\}"
      _smpcp_albums "$cur"
    ;;
    output)
      _smpcp_args "on" "off"
    ;;
  esac

  return
}

_smpcp
